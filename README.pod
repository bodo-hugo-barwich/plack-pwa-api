=head1 NAME

Plack Twiggy Product REST API

=head1 DESCRIPTION

This service provides the C<Product Data> as I<REST API> for the I<Plack Twiggy PWA> Project.

To learn more about the I<Plack Twiggy PWA> Project please visit:
L<Plack Twiggy PWA|https://github.com/bodo-hugo-barwich/plack-pwa-web>

The running Version is hosted on I<Glitch> at:
L<Plack Twiggy Product REST API|https://plack-pwa-api.glitch.me/>

=head1 REQUIREMENTS

To rebuild this web site the B<Minimum Requirements> are to have I<Perl> and C<cpanminus> installed.
The site uses the libraries C<Plack>, C<Twiggy> and C<JSON>.
The C<Twiggy> Web Server requires the C<AnyEvent> library.
The Server Responses are provided completely as C<JSON> documents.
The B<API Data Structures> are implemented with the C<Moose> library for B<OO-Design>.

=head1 INSTALLATION

=over

=item cpanminus

The C<cpanm> Script will install the dependencies on local user level as they are found in the F<cpanfile>.
To run the installation call the C<cpanm> Command within the project directory:

	cpanm -vn --installdeps .

=back

=head1 EXECUTION

=over

=item plackup

The Site can be launched using the C<plackup> Script as seen in the F<package.json>.
To launch the Site call the C<plackup> Command within the project directory:

	plackup --server Twiggy --port 3000 scripts/web.psgi

=back

=head1 IMPLEMENTATION

=over

=item C<AnyEvent::Future>

To not block the server main thread too long and to enable asynchronous request processing
the C<AnyEvent> feature of C<Twiggy> as C<AnyEvent::Future> is used.
Each I<Product Data Request> produces a future that the I<Product Data Factory> manages
to build a complete I<Product Data List>

=back
